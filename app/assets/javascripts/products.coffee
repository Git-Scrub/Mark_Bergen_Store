# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/
###
# Welcome to the new js2coffee 2.0, now
# rewritten to use the esprima parser.
# try it out!
###

options = []
$('.dropdown-menu a').on 'click', (event) ->
  console.log('yy');
  $target = $(event.currentTarget)
  val = $target.attr('data-value')
  $inp = $target.find('input')
  idx = undefined
  if (idx = options.indexOf(val)) > -1
    options.splice idx, 1
    setTimeout (->
      $inp.prop 'checked', false
      return
    ), 0
  else
    options.push val
    setTimeout (->
      $inp.prop 'checked', true
      return
    ), 0
  $(event.target).blur()
  console.log options
  false

#plugin bootstrap minus and plus
#http://jsfiddle.net/laelitenetwork/puJ6G/
$('.btn-number').click (e) ->
  e.preventDefault()
  fieldName = $(this).attr('data-field')
  type = $(this).attr('data-type')
  input = $('input[name=\'' + fieldName + '\']')
  currentVal = parseInt(input.val())
  if !isNaN(currentVal)
    if type == 'minus'
      if currentVal > input.attr('min')
        input.val(currentVal - 1).change()
      if parseInt(input.val()) == input.attr('min')
        $(this).attr 'disabled', true
    else if type == 'plus'
      if currentVal < input.attr('max')
        input.val(currentVal + 1).change()
      if parseInt(input.val()) == input.attr('max')
        $(this).attr 'disabled', true
  else
    input.val 0
  return
$('.input-number').focusin ->
  $(this).data 'oldValue', $(this).val()
  return
$('.input-number').change ->
  minValue = parseInt($(this).attr('min'))
  maxValue = parseInt($(this).attr('max'))
  valueCurrent = parseInt($(this).val())
  name = $(this).attr('name')
  if valueCurrent >= minValue
    $('.btn-number[data-type=\'minus\'][data-field=\'' + name + '\']').removeAttr 'disabled'
  else
    alert 'Sorry, the minimum value was reached'
    $(this).val $(this).data('oldValue')
  if valueCurrent <= maxValue
    $('.btn-number[data-type=\'plus\'][data-field=\'' + name + '\']').removeAttr 'disabled'
  else
    alert 'Sorry, the maximum value was reached'
    $(this).val $(this).data('oldValue')
  return
$('.input-number').keydown (e) ->
  # Allow: backspace, delete, tab, escape, enter and .
  if $.inArray(e.keyCode, [
      46
      8
      9
      27
      13
      190
    ]) != -1 or e.keyCode == 65 and e.ctrlKey == true or e.keyCode >= 35 and e.keyCode <= 39
    # let it happen, don't do anything
    return
  # Ensure that it is a number and stop the keypress
  if (e.shiftKey or e.keyCode < 48 or e.keyCode > 57) and (e.keyCode < 96 or e.keyCode > 105)
    e.preventDefault()
  return

# ---
# generated by js2coffee 2.2.0